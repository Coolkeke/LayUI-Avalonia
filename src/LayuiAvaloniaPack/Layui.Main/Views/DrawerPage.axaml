<UserControl
    x:Class="Layui.Main.Views.DrawerPage"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
    xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
    xmlns:ic="using:Avalonia.Xaml.Interactions.Custom"
    xmlns:lay="using:LayUI.Avalonia.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    d:DesignHeight="450"
    d:DesignWidth="800"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <Grid>
        <ToggleButton
            Grid.Row="1"
            Grid.Column="1"
            Width="150"
            Height="50"
            HorizontalAlignment="Center"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Content="点我"
            IsChecked="{Binding IsOpen, Mode=TwoWay}" />
        <Grid Height="300" VerticalAlignment="Top">
            <lay:LayDrawer IsOpen="{Binding IsOpen, Mode=TwoWay}" Type="Top">
                <i:Interaction.Behaviors>
                    <ia:EventTriggerBehavior EventName="Opened">
                        <ia:InvokeCommandAction Command="{Binding OpenedCommand}" />
                    </ia:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <Grid Height="200" Background="White">
                    <ToggleButton
                        Name="Toggle"
                        Width="150"
                        Height="50"
                        HorizontalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Content="点我" />
                </Grid>
            </lay:LayDrawer>
            <lay:LayDrawer IsOpen="{Binding #Toggle.IsChecked, Mode=TwoWay}" Type="Top">
                <Grid Height="150" Background="White">
                    <TextBlock
                        Margin="5"
                        Text="有些时候, Dialog 组件并不满足我们的需求, 比如你的表单很长, 亦或是你需要临时展示一些文档, Drawer 拥有和 Dialog 几乎相同的 API, 在 UI 上带来不一样的体验"
                        TextWrapping="Wrap" />
                </Grid>
            </lay:LayDrawer>
        </Grid>
        <lay:LayDrawer
            Height="300"
            VerticalAlignment="Bottom"
            IsOpen="{Binding IsOpen, Mode=TwoWay}"
            Type="Bottom">
            <Grid Height="150" Background="White">
                <TextBlock
                    Margin="5"
                    Text="有些时候, Dialog 组件并不满足我们的需求, 比如你的表单很长, 亦或是你需要临时展示一些文档, Drawer 拥有和 Dialog 几乎相同的 API, 在 UI 上带来不一样的体验"
                    TextWrapping="Wrap" />
            </Grid>
        </lay:LayDrawer>
        <Grid ColumnDefinitions="*,*">
            <lay:LayDrawer
                Grid.Column="1"
                Height="300"
                IsOpen="{Binding IsOpen, Mode=TwoWay}"
                Type="Right">
                <Grid Width="150" Background="White">
                    <TextBlock
                        Margin="5"
                        Text="有些时候, Dialog 组件并不满足我们的需求, 比如你的表单很长, 亦或是你需要临时展示一些文档, Drawer 拥有和 Dialog 几乎相同的 API, 在 UI 上带来不一样的体验"
                        TextWrapping="Wrap" />
                </Grid>
            </lay:LayDrawer>
            <lay:LayDrawer
                Height="300"
                IsOpen="{Binding IsOpen, Mode=TwoWay}"
                Type="Left">
                <Grid Width="150" Background="White">
                    <TextBlock
                        Margin="5"
                        Text="有些时候, Dialog 组件并不满足我们的需求, 比如你的表单很长, 亦或是你需要临时展示一些文档, Drawer 拥有和 Dialog 几乎相同的 API, 在 UI 上带来不一样的体验"
                        TextWrapping="Wrap" />
                </Grid>
            </lay:LayDrawer>
        </Grid>
    </Grid>
</UserControl>
