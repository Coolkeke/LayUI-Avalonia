<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:lay="clr-namespace:LayUI.Avalonia.Controls;assembly=LayUI.Avalonia"
    xmlns:layCv="clr-namespace:LayUI.Avalonia.Converters;assembly=LayUI.Avalonia"
    xmlns:sys="using:System">
    <Styles.Resources>
        <layCv:ExpanderThicknessFilterConverter x:Key="Left" Filter="Left" />
        <layCv:ExpanderThicknessFilterConverter x:Key="Right" Filter="Right" />
        <layCv:ExpanderThicknessFilterConverter x:Key="Up" Filter="Up" />
        <layCv:ExpanderThicknessFilterConverter x:Key="Down" Filter="Down" />
        <layCv:CornerRadiusFilterConverter x:Key="TopCornerRadiusFilterConverter" Filter="TopLeft, TopRight" />
        <layCv:CornerRadiusFilterConverter x:Key="RightCornerRadiusFilterConverter" Filter="TopRight, BottomRight" />
        <layCv:CornerRadiusFilterConverter x:Key="BottomCornerRadiusFilterConverter" Filter="BottomLeft, BottomRight" />
        <layCv:CornerRadiusFilterConverter x:Key="LeftCornerRadiusFilterConverter" Filter="TopLeft, BottomLeft" />
    </Styles.Resources>
    <Design.PreviewWith>
        <Border Padding="50">
            <StackPanel>
                <lay:LayExpander
                    Width="300"
                    Header="123"
                    IconAlignment="Left">
                    <TextBlock Text="测试信息" />
                </lay:LayExpander>
                <lay:LayExpander
                    Width="300"
                    Header="123"
                    IconAlignment="Right">
                    <TextBlock Text="测试信息" />
                </lay:LayExpander>
                <StackPanel Orientation="Horizontal">
                    <lay:LayExpander
                        Height="200"
                        Margin="5"
                        VerticalAlignment="Stretch"
                        ExpandDirection="Left"
                        IconAlignment="Top">
                        <lay:LayExpander.Header>
                            <TextBlock Text="标题">
                                <TextBlock.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="90" />
                                    </TransformGroup>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </lay:LayExpander.Header>
                        <Grid Margin="5">
                            <TextBlock Text="测试信息" />
                        </Grid>
                    </lay:LayExpander>
                    <lay:LayExpander
                        Height="200"
                        Margin="5"
                        VerticalAlignment="Stretch"
                        ExpandDirection="Left"
                        IconAlignment="Bottom">
                        <lay:LayExpander.Header>
                            <TextBlock Text="标题">
                                <TextBlock.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="90" />
                                    </TransformGroup>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </lay:LayExpander.Header>
                        <Grid Margin="5">
                            <TextBlock Text="测试信息" />
                        </Grid>
                    </lay:LayExpander>

                </StackPanel>
            </StackPanel>
        </Border>
    </Design.PreviewWith>
    <Style Selector="lay|LayExpander">
        <Setter Property="Padding" Value="5 0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Gray}" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="HeaderForeground" Value="Black" />
        <Setter Property="HeaderBackground" Value="{DynamicResource SilverGray}" />
        <Setter Property="ContentTransition">
            <Setter.Value>
                <CrossFade Duration="00:00:00.25" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style Selector="lay|LayExpander">
        <Setter Property="Template">
            <ControlTemplate>
                <DockPanel>
                    <ToggleButton
                        x:Name="ExpanderHeader"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding HeaderBackground}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        IsChecked="{TemplateBinding IsExpanded,
                                                    Mode=TwoWay}"
                        IsEnabled="{TemplateBinding IsEnabled}" />
                    <Border
                        x:Name="ExpanderContent"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        IsVisible="{TemplateBinding IsExpanded,
                                                    Mode=TwoWay}">
                        <ContentPresenter
                            x:Name="PART_ContentPresenter"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                </DockPanel>
            </ControlTemplate>
        </Setter>
    </Style>
    <!--  设置折叠板按钮模板 Start  -->
    <Style Selector="lay|LayExpander /template/ ToggleButton#ExpanderHeader">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border x:Name="ToggleButtonBackground" CornerRadius="{TemplateBinding CornerRadius}">
                    <Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto,*,Auto">
                        <ContentPresenter
                            x:Name="PART_ContentPresenter"
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="Center"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType=lay:LayExpander}, Path=HeaderForeground}" />
                        <Border
                            x:Name="ExpandCollapseChevronBorder"
                            Width="32"
                            Height="32"
                            Margin="7"
                            RenderTransformOrigin="50%,50%">
                            <Path
                                x:Name="ExpandCollapseChevron"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RenderTransformOrigin="50%,50%"
                                Stretch="None"
                                Stroke="Black"
                                StrokeThickness="1" />
                            <Border.RenderTransform>
                                <RotateTransform />
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="lay|LayExpander[IconAlignment=Left] /template/ ToggleButton#ExpanderHeader /template/ Border#ExpandCollapseChevronBorder">
        <Setter Property="Grid.Column" Value="0" />
        <Setter Property="Grid.Row" Value="1" />
    </Style>
    <Style Selector="lay|LayExpander[IconAlignment=Right] /template/  ToggleButton#ExpanderHeader /template/Border#ExpandCollapseChevronBorder">
        <Setter Property="Grid.Column" Value="2" />
        <Setter Property="Grid.Row" Value="1" />
    </Style>
    <Style Selector="lay|LayExpander[IconAlignment=Top] /template/  ToggleButton#ExpanderHeader /template/Border#ExpandCollapseChevronBorder">
        <Setter Property="Grid.Column" Value="1" />
        <Setter Property="Grid.Row" Value="0" />
    </Style>
    <Style Selector="lay|LayExpander[IconAlignment=Bottom] /template/  ToggleButton#ExpanderHeader /template/Border#ExpandCollapseChevronBorder">
        <Setter Property="Grid.Column" Value="1" />
        <Setter Property="Grid.Row" Value="2" />
    </Style>
    <Style Selector="lay|LayExpander /template/ ToggleButton#ExpanderHeader:pressed">
        <Setter Property="RenderTransform" Value="{x:Null}" />
    </Style>
    <Style Selector="lay|LayExpander:left /template/ ToggleButton#ExpanderHeader, lay|LayExpander:right /template/ ToggleButton#ExpanderHeader">
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>
    <Style Selector="lay|LayExpander /template/ ToggleButton#ExpanderHeader /template/ Border#ToggleButtonBackground">
        <Setter Property="Background" Value="{TemplateBinding Background}" />
        <Setter Property="BorderBrush" Value="{TemplateBinding BorderBrush}" />
        <Setter Property="BorderThickness" Value="{TemplateBinding BorderThickness}" />
    </Style>
    <Style Selector="lay|LayExpander:left /template/ ToggleButton#ExpanderHeader">
        <Setter Property="DockPanel.Dock" Value="Right" />
    </Style>
    <Style Selector="lay|LayExpander:up /template/ ToggleButton#ExpanderHeader">
        <Setter Property="DockPanel.Dock" Value="Bottom" />
    </Style>
    <Style Selector="lay|LayExpander:right /template/ ToggleButton#ExpanderHeader">
        <Setter Property="DockPanel.Dock" Value="Left" />
    </Style>
    <Style Selector="lay|LayExpander:down /template/ ToggleButton#ExpanderHeader">
        <Setter Property="DockPanel.Dock" Value="Top" />
    </Style>
    <!--  图标旋转  -->
    <Style Selector="lay|LayExpander:expanded /template/ ToggleButton#ExpanderHeader /template/ Border#ExpandCollapseChevronBorder">
        <Style.Animations>
            <Animation FillMode="Both" Duration="0:0:0.0625">
                <KeyFrame Cue="100%">
                    <Setter Property="RotateTransform.Angle" Value="180" />
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
    <Style Selector="lay|LayExpander:not(:expanded) /template/ ToggleButton#ExpanderHeader /template/ Border#ExpandCollapseChevronBorder">
        <Style.Animations>
            <Animation FillMode="Both" Duration="0:0:0.0625">
                <KeyFrame Cue="0%">
                    <Setter Property="RotateTransform.Angle" Value="180" />
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="RotateTransform.Angle" Value="0" />
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
    <!--  图标旋转  -->
    <Style Selector="lay|LayExpander:left /template/ ToggleButton#ExpanderHeader /template/ Path#ExpandCollapseChevron">
        <Setter Property="Data" Value="M 7 0 L 0 7 L 7 14" />
    </Style>
    <Style Selector="lay|LayExpander:up /template/ ToggleButton#ExpanderHeader /template/ Path#ExpandCollapseChevron">
        <Setter Property="Data" Value="M 0 7 L 7 0 L 14 7" />
    </Style>
    <Style Selector="lay|LayExpander:right /template/ ToggleButton#ExpanderHeader /template/ Path#ExpandCollapseChevron">
        <Setter Property="Data" Value="M 0 0 L 7 7 L 0 14" />
    </Style>
    <Style Selector="lay|LayExpander:down /template/ ToggleButton#ExpanderHeader /template/ Path#ExpandCollapseChevron">
        <Setter Property="Data" Value="M 0 0 L 7 7 L 14 0" />
    </Style>
    <!--  设置折叠板按钮模板 End  -->

    <!--  通过转换器转换目标控件圆角效果 Start  -->
    <Style Selector="lay|LayExpander:not(:expanded) /template/ ToggleButton#ExpanderHeader /template/ Border#ToggleButtonBackground">
        <Setter Property="CornerRadius" Value="{Binding $parent[lay:LayExpander].CornerRadius}" />
    </Style>
    <Style Selector="lay|LayExpander:expanded:up /template/ ToggleButton#ExpanderHeader /template/ Border#ToggleButtonBackground">
        <Setter Property="CornerRadius" Value="{Binding $parent[lay:LayExpander].CornerRadius, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="lay|LayExpander:expanded:up /template/ Border#ExpanderContent">
        <Setter Property="CornerRadius" Value="{Binding $parent[lay:LayExpander].CornerRadius, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="lay|LayExpander:expanded:down /template/ ToggleButton#ExpanderHeader /template/ Border#ToggleButtonBackground">
        <Setter Property="CornerRadius" Value="{Binding $parent[lay:LayExpander].CornerRadius, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="lay|LayExpander:expanded:down /template/ Border#ExpanderContent">
        <Setter Property="CornerRadius" Value="{Binding $parent[lay:LayExpander].CornerRadius, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="lay|LayExpander:expanded:left /template/ ToggleButton#ExpanderHeader /template/ Border#ToggleButtonBackground">
        <Setter Property="CornerRadius" Value="{Binding $parent[lay:LayExpander].CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="lay|LayExpander:expanded:left /template/ Border#ExpanderContent">
        <Setter Property="CornerRadius" Value="{Binding $parent[lay:LayExpander].CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="lay|LayExpander:expanded:right /template/ ToggleButton#ExpanderHeader /template/ Border#ToggleButtonBackground">
        <Setter Property="CornerRadius" Value="{Binding $parent[lay:LayExpander].CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="lay|LayExpander:expanded:right /template/ Border#ExpanderContent">
        <Setter Property="CornerRadius" Value="{Binding $parent[lay:LayExpander].CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
    </Style>

    <!--  通过转换器转换目标控件圆角效果 End  -->
    <!--  通过转换器转换目标控件边框效果 Start  -->
    <Style Selector="lay|LayExpander:left /template/ Border#ExpanderContent">
        <Setter Property="BorderThickness" Value="{Binding $parent[lay:LayExpander].BorderThickness, Converter={StaticResource Left}}" />
    </Style>
    <Style Selector="lay|LayExpander:up /template/ Border#ExpanderContent">
        <Setter Property="BorderThickness" Value="{Binding $parent[lay:LayExpander].BorderThickness, Converter={StaticResource Up}}" />
    </Style>
    <Style Selector="lay|LayExpander:right /template/ Border#ExpanderContent">
        <Setter Property="BorderThickness" Value="{Binding $parent[lay:LayExpander].BorderThickness, Converter={StaticResource Right}}" />
    </Style>
    <Style Selector="lay|LayExpander:down /template/ Border#ExpanderContent">
        <Setter Property="BorderThickness" Value="{Binding $parent[lay:LayExpander].BorderThickness, Converter={StaticResource Down}}" />
    </Style>
    <!--  通过转换器转换目标控件边框效果 End  -->
    <!--  Add Styles Here  -->
</Styles>
